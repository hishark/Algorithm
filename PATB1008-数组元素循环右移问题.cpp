/**
1008 数组元素循环右移问题 (20)（20 分）
~就是下标 PTA这个题目显示的真的辣鸡OTZ A~0~就是A0

一个数组A中存有N（N&gt0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M>=0）个位置，即将A中的数据由（A~0~ A~1~……A~N-1~）变换为（A~N-M~ …… A~N-1~ A~0~ A~1~……A~N-M-1~）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？

输入格式：每个输入包含一个测试用例，第1行输入N ( 1<=N<=100)、M（M>=0）；第2行输入N个整数，之间用空格分隔。

输出格式：在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。

输入样例：

6 2
1 2 3 4 5 6
输出样例：

5 6 1 2 3 4
**/
#include<stdio.h>
#include<iostream>
using namespace std;
int main(){
    int N,M;
    cin>>N>>M;

    /**
    这一步操作至关重要，题目并没有给出M的最大值，因此不能直接认为M<N，所以在这里求余简化
    **/
    M = M % N;

    int a[N+M];
    for(int i=0;i<N;i++){
        cin>>a[i];
    }

    for(int i=N+M-1;i>=M;i--){
        a[i] = a[i-M];
    }

    for(int i=0;i<M;i++){
        a[i] = a[N+i];
    }
    for(int i=0;i<N;i++){
        if(i!=N-1){
            cout<<a[i]<<" ";
        }else{
            cout<<a[i]<<endl;
        }
    }
}
